/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT

    jump_layer{
      bindings = <
        &none         &none          &none          &none       &none     &none                         &none         &none         &none         &none         &none       &none
        &none         &none          &none          &none       &none     &none                         &none         &none         &none         &none         &none       &none
        &none         &none          &none          &none       &none     &none          &none          &none         &none         &none         &none         &none       &none
                                                       &trans          &trans          &trans   &trans    &trans       &trans         &trans         &trans
      >;
    };
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

#define DEFAULT 0
#define SHIFT 1
#define NAV 2
#define NUM 3
#define FUNC 4
#define QWERTY 5

&mt {
    tapping-term-ms = <200>;
};
/ {
  behaviors {
         td: tap_dance {
                    compatible = "zmk,behavior-tap-dance";
                    label = "TAP_DANCE";
                    #binding-cells = <2>;
                    tapping-term-ms = <200>;
                    bindings = <&kp>, <&kp>;
                };
    };
  keymap {
          compatible = "zmk,keymap";

    default_layer {
      bindings = <
        &lt FUNC ESC       &kp SQT      &kp COMMA  &kp DOT   &kp P         &kp Y                                          &kp F      &kp G     &kp C     &kp R      &kp L   &kp FSLH  
        &to SHIFT          &kp A        &kp O      &kp E     &kp U         &kp I                                          &kp D      &kp H     &kp T     &kp N      &kp S   &kp MINUS 
        &kp LALT           &kp SEMI     &kp Q      &kp J     &kp K         &kp X        &kp C_PLAY_PAUSE                  &kp B      &kp M     &kp W     &kp V      &kp Z   &kp RET  
                                                   &none     &mt LGUI GRAVE &lt NAV SPACE &lt NUM RET     &kp LS(RET)     &mt LSHFT BACKSPACE &mt LCTRL TAB  &kp AT_SIGN 
      >;
      sensor-bindings = <&inc_dec_kp PG_UP PG_DN>;
    };

    shift_layer {
      bindings = <
        &trans      &kp LS(SQT)      &kp LS(COMMA)  &kp LS(DOT)   &kp LS(P)         &kp LS(Y)                               &kp LS(F)      &kp LS(G)     &kp LS(C)     &kp LS(R)      &kp LS(L)          &kp LS(FSLH)  
        &to DEFAULT &kp LS(A)        &kp LS(O)      &kp LS(E)     &kp LS(U)         &kp LS(I)                               &kp LS(D)      &kp LS(H)     &kp LS(T)     &kp LS(N)      &kp LS(S)          &kp LS(MINUS) 
        &trans      &kp LS(SEMI)     &kp LS(Q)      &kp LS(J)     &kp LS(K)         &kp LS(X)        &to DEFAULT            &kp LS(B)      &kp LS(M)     &kp LS(W)     &kp LS(V)      &kp LS(Z)          &kp LS(RET)  
                                                    &none         &kp LS(GRAVE)     &kp LS(SPACE)    &kp LS(RET)   &kp RET  &kp DELETE     &trans        &kp LS(AT_SIGN)
      >;
      sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
    };

    nav_layer {
      bindings = <
        &none         &none           &none                  &none                   &none                   &none                                 &td F4 F6         &kp LG(V)      &kp LG(C)   &kp LG(X)   &none         &none
        &none  &kp LG(LA(LC(LS(N0)))) &kp LG(LA(LC(LS(N1)))) &kp LG(LA(LC(LS(N2))))  &kp LG(LA(LC(LS(N3))))  &kp LG(SPACE)                         &td F9 F10        &kp LEFT       &kp DOWN    &kp UP      &kp RIGHT     &none
        &none         &none           &kp LCTRL              &kp LG(LA(LC(LS(N4))))  &kp LG(TAB)             &td F8 LC(N1)     &kp LA(LC(SPACE))   &td F2 F3         &kp LC(H)      &kp LC(J)   &kp LC(K)   &kp LC(L)     &none
                                                             &none                   &trans                  &none       &none       &td Q F12     &kp RET      &kp PG_DN   &kp PG_UP
      >;
      sensor-bindings = <&inc_dec_kp LEFT RIGHT>;
   };

    num_layer {
      bindings = <
        &none         &none           &none           &none           &none           &none                             &kp PLUS     &kp N7         &kp N8      &kp N9      &none           &kp BSLH
        &none         &kp LCTRL       &kp LALT        &kp LSHFT       &kp LGUI        &none                             &kp SEMI     &kp N1         &kp N2      &kp N3      &kp N4          &none
        &none         &none           &none           &none           &none           &none             &kp C_MUTE      &kp EQUAL    &kp N0         &kp LPAR    &kp RPAR    &none           &none
                                                      &none           &none           &none    &none     &kp N6         &kp N5       &td LBRC LBKT  &td RBRC RBKT  
       >;
    };

    function_layer {
      bindings = <
        &none         &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4                      &none         &kp F7         &kp F8      &kp F9      &kp F10         &none
        &none         &bt BT_CLR      &none           &none           &none           &none                             &none         &kp F1         &kp F2      &kp F3      &kp F4          &none
        &bootloader   &sys_reset      &none           &none           &none           &none              &to QWERTY     &none         &kp F11        &kp F12     &kp F13     &kp F14         &none
                                                      &none           &none           &none    &none     &kp F6        &kp F5         &kp F15      &none
      >;
      sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
    };

   qwerty_layer{
      bindings = <
        &kp ESC     &kp Q     &kp W       &kp E     &kp R           &kp T                                &kp Y     &kp U     &kp I      &kp O    &kp P     &kp BACKSPACE
        &kp TAB     &kp A     &kp S       &kp D     &kp F           &kp G                                &kp H     &kp J     &kp K      &kp L    &kp SEMI  &kp SQT
        &kp LSHFT   &kp Z     &kp X       &kp C     &kp V           &kp B            &to DEFAULT         &kp N     &kp M     &kp COMMA  &kp DOT  &kp FSLH  &mt RSHFT RET
                                          &none     &none           &kp SPACE   &kp SPACE    &kp SPACE   &kp SPACE &none     &none
      >;
      sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
    };

        };
};
